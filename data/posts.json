[{"url":"https://api.github.com/repos/77Vincent/77vincent/issues/9","repository_url":"https://api.github.com/repos/77Vincent/77vincent","labels_url":"https://api.github.com/repos/77Vincent/77vincent/issues/9/labels{/name}","comments_url":"https://api.github.com/repos/77Vincent/77vincent/issues/9/comments","events_url":"https://api.github.com/repos/77Vincent/77vincent/issues/9/events","html_url":"https://github.com/77Vincent/77vincent/issues/9","id":475963954,"node_id":"MDU6SXNzdWU0NzU5NjM5NTQ=","number":9,"title":"PSQL Handbook","user":{"login":"77Vincent","id":12905966,"node_id":"MDQ6VXNlcjEyOTA1OTY2","avatar_url":"https://avatars2.githubusercontent.com/u/12905966?v=4","gravatar_id":"","url":"https://api.github.com/users/77Vincent","html_url":"https://github.com/77Vincent","followers_url":"https://api.github.com/users/77Vincent/followers","following_url":"https://api.github.com/users/77Vincent/following{/other_user}","gists_url":"https://api.github.com/users/77Vincent/gists{/gist_id}","starred_url":"https://api.github.com/users/77Vincent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/77Vincent/subscriptions","organizations_url":"https://api.github.com/users/77Vincent/orgs","repos_url":"https://api.github.com/users/77Vincent/repos","events_url":"https://api.github.com/users/77Vincent/events{/privacy}","received_events_url":"https://api.github.com/users/77Vincent/received_events","type":"User","site_admin":false},"labels":[{"id":1518289637,"node_id":"MDU6TGFiZWwxNTE4Mjg5NjM3","url":"https://api.github.com/repos/77Vincent/77vincent/labels/EN","name":"EN","color":"bdf1f9","default":false},{"id":1140022834,"node_id":"MDU6TGFiZWwxMTQwMDIyODM0","url":"https://api.github.com/repos/77Vincent/77vincent/labels/Programming","name":"Programming","color":"D9C6A7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-08-02T02:14:13Z","updated_at":"2019-08-25T14:53:17Z","closed_at":null,"author_association":"OWNER","body":"## Connect to PostgreSQL server\r\n```bash\r\npsql [-d database] [-U user] [-p port]\r\n```\r\n\r\n## After connected\r\n### Switch to another database\r\n```bash\r\n\\c dbname username\r\n```\r\n### Show all databases\r\n```bash\r\n\\l\r\n```\r\n### Show all tables\r\n```bash\r\n# List available tables\r\n\\dt\r\n\r\n# List all tables\r\n\\dt *.*\r\n\r\n# Describe a table\r\n\\d table_name\r\n```\r\n### Show all schemas\r\n```bash\r\n\\dn\r\n```"},{"url":"https://api.github.com/repos/77Vincent/77vincent/issues/8","repository_url":"https://api.github.com/repos/77Vincent/77vincent","labels_url":"https://api.github.com/repos/77Vincent/77vincent/issues/8/labels{/name}","comments_url":"https://api.github.com/repos/77Vincent/77vincent/issues/8/comments","events_url":"https://api.github.com/repos/77Vincent/77vincent/issues/8/events","html_url":"https://github.com/77Vincent/77vincent/issues/8","id":448529058,"node_id":"MDU6SXNzdWU0NDg1MjkwNTg=","number":8,"title":"求佛与客观规律","user":{"login":"77Vincent","id":12905966,"node_id":"MDQ6VXNlcjEyOTA1OTY2","avatar_url":"https://avatars2.githubusercontent.com/u/12905966?v=4","gravatar_id":"","url":"https://api.github.com/users/77Vincent","html_url":"https://github.com/77Vincent","followers_url":"https://api.github.com/users/77Vincent/followers","following_url":"https://api.github.com/users/77Vincent/following{/other_user}","gists_url":"https://api.github.com/users/77Vincent/gists{/gist_id}","starred_url":"https://api.github.com/users/77Vincent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/77Vincent/subscriptions","organizations_url":"https://api.github.com/users/77Vincent/orgs","repos_url":"https://api.github.com/users/77Vincent/repos","events_url":"https://api.github.com/users/77Vincent/events{/privacy}","received_events_url":"https://api.github.com/users/77Vincent/received_events","type":"User","site_admin":false},"labels":[{"id":1140022836,"node_id":"MDU6TGFiZWwxMTQwMDIyODM2","url":"https://api.github.com/repos/77Vincent/77vincent/labels/Thoughts","name":"Thoughts","color":"BFDEC3","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-05-26T05:07:46Z","updated_at":"2019-05-26T05:09:59Z","closed_at":null,"author_association":"OWNER","body":"求佛，求福，求保佑，本质上是功利的，期望冥冥之中的某种能量，能辅助自己，达成心中的诉求，一些贪心的人，甚至期望的不只是“辅助”，而是期望那最想要的结果，直接降临到自己头上。比如疾病痊愈，生意兴隆，考试过关，彩票中奖，亲人平安，表白成功...\r\n\r\n人们真的发自内心相信那是有用的吗？虽然很多求佛行为，事实上并没有什么“花费”。而关键点便在于此，多大的期望背后，对应着多大的成本和意愿。烧一炷香，拜一拜，这个行为的成本和难度，实在是太低了，哪怕是相当虔诚的人，每天在家里对着一尊菩萨拜一拜，或者定期去某个地方走一走，事实上，也并不是一件特别困难且高成本的事。尽管理智的人打心底知道神迹存在的概率很低，但同样低成本的付出之下，何不试一试呢？我想这大概是很多现代人的心理吧，并不一定是真的相信，但背后实质上是一种近似于买彩票的心理，以小博大。想象一下，假如现在有一座庙，拜一拜要花三万块钱，或者要在里面关上一个星期，这个时候人们的理性就会跳出来，问那到底值不值得吧？如果一块钱的成本真的可以撬动一千万的收益，世界上就不会有人鑫鑫业业地工作了。事实是，很少有彻头彻尾的傻子，但却有实实在在的懒人。\r\n\r\n我的世界观里，只有因果关系。功利且具体的诉求，必然需要相对应的功利且具体的行动，和相匹配的成本。想要考上清华，如果把通过学习达成的难度，转化为求佛，那大概是每天求12个小时，并且把佛经倒背如流，包括英文，日文，法文版等等，并且与世隔绝一年...显然，即使做到了，也是不可能考上的，因为压根违背客观规律。不过重点是，我在这里试图将收益与成本、难度相匹配，来阐明这个道理，如果虔诚的信仰确实可以带来或大或小的世俗收益，那其难度和成本也一定会让很多人望而却步。\r\n\r\n不过，我也并不完全认为求佛和信仰一无是处，它发挥的作用，不是真的影响了客观因果规律，而是在于人的心理（事实上心理也可以被视为一种客观实在）。比方说，一个女孩，去寺庙里看月下老人求姻缘，这个行为本身，一方面，是对自身诉求的大胆承认和积极响应-至少成本最低的行动已经开始，这样的心理建设就是达成诉求的第一步。做成一件事的第一步，就是想做成它。另一方面，行动本身正好把她暴露在了相似人群的环境里，有了这一次，还有会有下一次，别的行动，别的场合，自然而然，成功的几率也要比在家里蹲着高得多。"},{"url":"https://api.github.com/repos/77Vincent/77vincent/issues/7","repository_url":"https://api.github.com/repos/77Vincent/77vincent","labels_url":"https://api.github.com/repos/77Vincent/77vincent/issues/7/labels{/name}","comments_url":"https://api.github.com/repos/77Vincent/77vincent/issues/7/comments","events_url":"https://api.github.com/repos/77Vincent/77vincent/issues/7/events","html_url":"https://github.com/77Vincent/77vincent/issues/7","id":386643497,"node_id":"MDU6SXNzdWUzODY2NDM0OTc=","number":7,"title":"How to solve these problems in Javascript","user":{"login":"77Vincent","id":12905966,"node_id":"MDQ6VXNlcjEyOTA1OTY2","avatar_url":"https://avatars2.githubusercontent.com/u/12905966?v=4","gravatar_id":"","url":"https://api.github.com/users/77Vincent","html_url":"https://github.com/77Vincent","followers_url":"https://api.github.com/users/77Vincent/followers","following_url":"https://api.github.com/users/77Vincent/following{/other_user}","gists_url":"https://api.github.com/users/77Vincent/gists{/gist_id}","starred_url":"https://api.github.com/users/77Vincent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/77Vincent/subscriptions","organizations_url":"https://api.github.com/users/77Vincent/orgs","repos_url":"https://api.github.com/users/77Vincent/repos","events_url":"https://api.github.com/users/77Vincent/events{/privacy}","received_events_url":"https://api.github.com/users/77Vincent/received_events","type":"User","site_admin":false},"labels":[{"id":1518289637,"node_id":"MDU6TGFiZWwxNTE4Mjg5NjM3","url":"https://api.github.com/repos/77Vincent/77vincent/labels/EN","name":"EN","color":"bdf1f9","default":false},{"id":1140022834,"node_id":"MDU6TGFiZWwxMTQwMDIyODM0","url":"https://api.github.com/repos/77Vincent/77vincent/labels/Programming","name":"Programming","color":"D9C6A7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-12-03T03:17:52Z","updated_at":"2019-08-25T14:58:05Z","closed_at":null,"author_association":"OWNER","body":"## Generate random number\r\nGenerate an integer within the given range.\r\n```js\r\nfunction generateRandomNumber(min, max) {\r\n  return Math.random() * (max - min) + min\r\n}\r\n```\r\nRound the result into an integer within the range.\r\n```js\r\nfunction generateRandomNumber(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min\r\n}\r\n```\r\n\r\n## Remove duplicates from array\r\nSet + spread operator (Fastest)\r\n```js\r\nfunction removeDuplicates(array) {\r\n return [...new Set(array)]\r\n}\r\n```\r\nUsing for loop (Medium)\r\n```js\r\nfunction removeDuplicates(array) {\r\n  let arr = []\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (arr.indexOf(array[i]) === -1) {\r\n      arr.push(array[i])\r\n    }\r\n  }\r\n  return arr\r\n}\r\n```\r\nUsing filter (Slowest)\r\n```js\r\nfunction removeDuplicates(array) {\r\n  return array.filter((item, index) => index === array.indexOf(item))\r\n}\r\n```\r\n"},{"url":"https://api.github.com/repos/77Vincent/77vincent/issues/5","repository_url":"https://api.github.com/repos/77Vincent/77vincent","labels_url":"https://api.github.com/repos/77Vincent/77vincent/issues/5/labels{/name}","comments_url":"https://api.github.com/repos/77Vincent/77vincent/issues/5/comments","events_url":"https://api.github.com/repos/77Vincent/77vincent/issues/5/events","html_url":"https://github.com/77Vincent/77vincent/issues/5","id":386643325,"node_id":"MDU6SXNzdWUzODY2NDMzMjU=","number":5,"title":"Git Handbook","user":{"login":"77Vincent","id":12905966,"node_id":"MDQ6VXNlcjEyOTA1OTY2","avatar_url":"https://avatars2.githubusercontent.com/u/12905966?v=4","gravatar_id":"","url":"https://api.github.com/users/77Vincent","html_url":"https://github.com/77Vincent","followers_url":"https://api.github.com/users/77Vincent/followers","following_url":"https://api.github.com/users/77Vincent/following{/other_user}","gists_url":"https://api.github.com/users/77Vincent/gists{/gist_id}","starred_url":"https://api.github.com/users/77Vincent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/77Vincent/subscriptions","organizations_url":"https://api.github.com/users/77Vincent/orgs","repos_url":"https://api.github.com/users/77Vincent/repos","events_url":"https://api.github.com/users/77Vincent/events{/privacy}","received_events_url":"https://api.github.com/users/77Vincent/received_events","type":"User","site_admin":false},"labels":[{"id":1518289637,"node_id":"MDU6TGFiZWwxNTE4Mjg5NjM3","url":"https://api.github.com/repos/77Vincent/77vincent/labels/EN","name":"EN","color":"bdf1f9","default":false},{"id":1140022834,"node_id":"MDU6TGFiZWwxMTQwMDIyODM0","url":"https://api.github.com/repos/77Vincent/77vincent/labels/Programming","name":"Programming","color":"D9C6A7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-12-03T03:16:50Z","updated_at":"2019-08-25T14:58:36Z","closed_at":null,"author_association":"OWNER","body":"## Instruction\r\n* <parameter\\> is mandatory, [parameter] is optional. \r\n* Commands that manipulate certain files, should receive a selector which is either file name, directory name, or \".\" meaning select all; if no selector is given, it will manipulate all possible files by default.\r\n\r\n## Add / Commit\r\n* All files are untrack when created, git doesn't know their existence, once after commit, they will be always tracked.\r\n* All changes including creation, modification and deletion, need to be added before commit.\r\n* Files that don't want to be tracked all the time, should be written into .gitignore.\r\n\r\n```bash\r\n# untrack / modified / deleted =====> added\r\ngit add <file name>\r\n\r\n# added =====> commited\r\ngit commit [file name] -m \"commit message\"\r\n```\r\n\r\n## Push / Pull\r\n* These two brothers are used for sync between local and remote repository.\r\n* Origin is like a domain, refers to remote branch by default.\r\n\r\n```bash\r\n# local branch A =====> remote branch A\r\ngit push\r\n\r\n# local branch A <===== remote branch A\r\ngit pull\r\n\r\n# local branch A =====> specified branch\r\ngit push origin <branch name>\r\n\r\n# local branch A <===== specified branch\r\ngit pull origin <branch name>\r\n\r\n# Pull from the upstream repository\r\ngit pull upstream <branch name>\r\n# or\r\ngit pull upstream HEAD\r\n```\r\n\r\n## Reset\r\n* Reset reverts files to a specific previous status, like \"undo\".\r\n* HEAD is like milestone in the history, HEAD moves forward when a commit is created.\r\n* HEAD~ refers to the last commit, HEAD~~ refers to the commit before last commit, and so forth. \r\n\r\n```bash\r\n# added =====> untrack / modified / deleted.\r\ngit reset [file name]\r\n\r\n# committed =====> added.\r\ngit reset [file name] --soft HEAD~\r\n\r\n# committed =====> modified / untrack / deleted.\r\ngit reset [file name] HEAD~\r\n\r\n# committed =====> initial status (cautious).\r\ngit reset [file name] --hard HEAD~\r\n```\r\n\r\n## Checkout\r\n* Checkout can manipulate both branches and files, use it very carefully when working with files.  \r\n```bash\r\n# Switch to another branch\r\ngit checkout <branch name>\r\n\r\n# Create a new branch and immediately switch to the branch\r\ngit checkout -b <new branch name>\r\n\r\n# Revert files (Cautious)\r\ngit checkout <file name>\r\n```\r\n\r\n## Branch\r\n* Each branch has local and remote version.\r\n```bash\r\n# List local branches\r\ngit branch\r\n\r\n# List remote branches\r\ngit branch -r\r\n\r\n# List local and remote branches\r\ngit branch -a\r\n\r\n# Create local branch\r\ngit branch <branch name>\r\n\r\n# Delete local branch\r\ngit branch -d <branch name>\r\n\r\n# Push local branch to remote\r\ngit push -u origin <branch name>\r\n\r\n# Delete remote branch\r\ngit push -d origin <branch name>\r\n```\r\n\r\n## Clean\r\n* To delete untracked files from repository\r\n* By default, it will only delete files unless given a directory\r\n* By default git will refuse to delete unless \"-f\" are given.\r\n```bash\r\n# Delete all files\r\ngit clean -f\r\n\r\n# Delete repository\r\ngit clean -f <directory name>\r\n\r\n# Only shows what would be done but without actually doing it.\r\ngit clean -d [whatever]\r\n```\r\n\r\n## Log\r\n* To see the history of all commits\r\n```bash\r\n# List full history\r\ngit log\r\n\r\n# List commits only made by a specified user\r\ngit log --author=username\r\n\r\n# List history with more details\r\ngit log --stat\r\n```\r\n\r\n## Show\r\n* To see full details of a commit\r\n```bash\r\n# Show details of the last commit\r\ngit show\r\n\r\n# Show details of a specific commit\r\ngit show <commit ID>\r\n```\r\n\r\n## Remote repository\r\n```bash\r\n# To see the current remote repository\r\ngit remote -v\r\n\r\n# To set the upstream\r\ngit remote add upstream <url of the remote upstream repository>\r\n```\r\n"},{"url":"https://api.github.com/repos/77Vincent/77vincent/issues/3","repository_url":"https://api.github.com/repos/77Vincent/77vincent","labels_url":"https://api.github.com/repos/77Vincent/77vincent/issues/3/labels{/name}","comments_url":"https://api.github.com/repos/77Vincent/77vincent/issues/3/comments","events_url":"https://api.github.com/repos/77Vincent/77vincent/issues/3/events","html_url":"https://github.com/77Vincent/77vincent/issues/3","id":386643143,"node_id":"MDU6SXNzdWUzODY2NDMxNDM=","number":3,"title":"终极氛围","user":{"login":"77Vincent","id":12905966,"node_id":"MDQ6VXNlcjEyOTA1OTY2","avatar_url":"https://avatars2.githubusercontent.com/u/12905966?v=4","gravatar_id":"","url":"https://api.github.com/users/77Vincent","html_url":"https://github.com/77Vincent","followers_url":"https://api.github.com/users/77Vincent/followers","following_url":"https://api.github.com/users/77Vincent/following{/other_user}","gists_url":"https://api.github.com/users/77Vincent/gists{/gist_id}","starred_url":"https://api.github.com/users/77Vincent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/77Vincent/subscriptions","organizations_url":"https://api.github.com/users/77Vincent/orgs","repos_url":"https://api.github.com/users/77Vincent/repos","events_url":"https://api.github.com/users/77Vincent/events{/privacy}","received_events_url":"https://api.github.com/users/77Vincent/received_events","type":"User","site_admin":false},"labels":[{"id":1140022836,"node_id":"MDU6TGFiZWwxMTQwMDIyODM2","url":"https://api.github.com/repos/77Vincent/77vincent/labels/Thoughts","name":"Thoughts","color":"BFDEC3","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-12-03T03:15:55Z","updated_at":"2018-12-03T09:07:07Z","closed_at":null,"author_association":"OWNER","body":"我想很多人心中，大概都有一个神往的场景，梦境般的画面，渴望置身其中，在那里能感到一种永恒的舒适。也许现实中每个人的奔忙劳碌，其实都是在不断试图向那个意向靠近。\r\n\r\n那个意向是长久并稳定的，也许细节上会有所变化，但关键的氛围始终差不多。那关键的氛围，在我看来，正反映出一个人的根本追求、与生俱来的性情，或许还有早期经历。这里所说，有点先天的意思，深植于人格当中，像基因一样恒定。比方说我自己，那个氛围大概在初中时形成了：我牵着一个女人，走在一片茫茫的蓝紫色草原上，天色暗淡，辽阔寂静，漫无目的。后来的十多年里，随着心智的成长和阅历的积累，那个意向也经历了一系列变化，衍生出多个版本。比如我一个人骑着哈利波特里那样的飞天扫帚，夜里在老家边上的河中央飞行，两边是沉静的、黯淡的山和树，我自由的穿梭在山河之间，云雾之中，可高可低，没有东西可以触碰到我。也有现实的版本：我住在海边山崖上的一个别墅里，有着简约而质朴的室内环境；入夜时，透过卧室里占满整面墙的落地窗，看着近处海浪拍击峭壁，和远方无边的、墨蓝色的大海。说到这里，我想到了高中时生成的另一个画面，陶醉了我很长一段时间：那个画面来自于现实中的一段回家路，两边是90年代的低层住宅，路边是花圃和昏黄的路灯，没有什么行人，傍晚时，我总想象着有一个女人站在那里等着我回家。\r\n\r\n后来我发现，所有那些意向，尽管具体情节、场景不尽相同，但却有着某种相似的氛围，那种氛围是安详的，安全的，温暖的，有一种“落幕感”。我的内心深处，似乎向往着某种永恒的安定与陪伴。"},{"url":"https://api.github.com/repos/77Vincent/77vincent/issues/2","repository_url":"https://api.github.com/repos/77Vincent/77vincent","labels_url":"https://api.github.com/repos/77Vincent/77vincent/issues/2/labels{/name}","comments_url":"https://api.github.com/repos/77Vincent/77vincent/issues/2/comments","events_url":"https://api.github.com/repos/77Vincent/77vincent/issues/2/events","html_url":"https://github.com/77Vincent/77vincent/issues/2","id":386643056,"node_id":"MDU6SXNzdWUzODY2NDMwNTY=","number":2,"title":"How to implement Deep Clone in Javascript","user":{"login":"77Vincent","id":12905966,"node_id":"MDQ6VXNlcjEyOTA1OTY2","avatar_url":"https://avatars2.githubusercontent.com/u/12905966?v=4","gravatar_id":"","url":"https://api.github.com/users/77Vincent","html_url":"https://github.com/77Vincent","followers_url":"https://api.github.com/users/77Vincent/followers","following_url":"https://api.github.com/users/77Vincent/following{/other_user}","gists_url":"https://api.github.com/users/77Vincent/gists{/gist_id}","starred_url":"https://api.github.com/users/77Vincent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/77Vincent/subscriptions","organizations_url":"https://api.github.com/users/77Vincent/orgs","repos_url":"https://api.github.com/users/77Vincent/repos","events_url":"https://api.github.com/users/77Vincent/events{/privacy}","received_events_url":"https://api.github.com/users/77Vincent/received_events","type":"User","site_admin":false},"labels":[{"id":1518289637,"node_id":"MDU6TGFiZWwxNTE4Mjg5NjM3","url":"https://api.github.com/repos/77Vincent/77vincent/labels/EN","name":"EN","color":"bdf1f9","default":false},{"id":1140022834,"node_id":"MDU6TGFiZWwxMTQwMDIyODM0","url":"https://api.github.com/repos/77Vincent/77vincent/labels/Programming","name":"Programming","color":"D9C6A7","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-12-03T03:15:27Z","updated_at":"2019-08-25T14:58:32Z","closed_at":null,"author_association":"OWNER","body":"## What does \"copy\" mean in Javascript?\r\nIn javascript, primitives are stored in individual memory space on every creation, so copying a primitive is dead simple and safe. Changes made to the copy will never affect the source one.\r\n```js\r\nconst source = 'Hello World' \r\nconst copy = source\r\n\r\ncopy = 'So long' \r\nconsole.log(source) // => 'Hello World'\r\n```\r\n\r\nBut when it comes to object type, simply assign an object to another variable does not truely copy the original one at all. Instead, the new one is only a reference to the original object, whatever changes made to either of them will affect the other one because fundamentally, they both refer to the same area of memory space where the object is stored.\r\n\r\n```js\r\nconst source = { a: 1 }\r\nconst copy = source\r\n\r\ncopy.a = 2\r\nconsole.log(source.a) // => 2\r\n```\r\n\r\n## Shallow clone VS Deep clone\r\nIn order to truly copy an object, there are two approaches to be distinguished from which are **Shalow clone** and **Deep clone**. Shallow clone only truly copies the first \"layer\", or at least, not all layers of the source object, as demonstrated below.\r\n```js\r\nconst source = {\r\n  a: 1,\r\n  b: { foo: 1 },\r\n}\r\nconst copy = Object.assign({}, source) // This makes a shallow copy\r\n\r\n// First layer of source object will be intact when modifying the copy\r\ncopy.a = 2\r\nconsole.log(source.a) // => 1\r\n\r\n// Second layer is still using reference\r\ncopy.b.foo = 2\r\nconsole.log(source.b.foo) // => 2\r\n```\r\n\r\nAs the name implied, deep clone means that the newly created object will be copied from the source object from bottom to top, whatever changes made to any layer of each one will not affect the other one as they are completely stored in two different area of memory space.\r\n```js\r\nconst source = {\r\n  a: 1,\r\n  b: { foo: 1 },\r\n}\r\nconst copy = deepClone(source)\r\n\r\ncopy.b.foo = 2\r\nconsole.log(source.b.foo) // => 1\r\n```\r\n\r\n\r\n## A workable implementation for deep clone\r\nUsing recursion to go through the entire object, be sure to cover different types of object such as Object or Array, return the same type of value according to that of the input on each iteration, if the input is a primitive then just return the input as it is. For now I only covered Object and Array types which are mostly used in real applications but there are other iterable objects in Javascript like **Set**.\r\n\r\n```js\r\nconst deepClone = source => {\r\n  if (source === null || source === undefined) {\r\n    return source \r\n  } else if (source.constructor.name === 'Object') {\r\n    const clone = {}\r\n    for (let key in source) {\r\n      clone[key] = deepClone(source[key])\r\n    }\r\n    return clone\r\n  } else if (source.constructor.name === 'Array') {\r\n    return source.map(value => deepClone(value))\r\n  } else {\r\n    return source\r\n  }\r\n}\r\n```"}]